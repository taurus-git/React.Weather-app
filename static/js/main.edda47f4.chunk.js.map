{"version":3,"sources":["components/Header.js","components/CityForm.js","components/CityListItem.js","components/CitiesList.js","components/CitiesCards.js","components/WeatherForecast.js","components/App.js","components/useStateWithLocalStorage.js","index.js"],"names":["Header","CityForm","addCity","useState","cityName","setCityName","onSubmit","e","preventDefault","className","type","name","value","onChange","target","placeholder","CityListItem","id","handleDelete","onClick","currentTarget","CitiesList","cities","map","city","key","CitiesCards","setForecast","temp","Math","round","forecast","feels_like","temp_max","temp_min","classList","toggle","humidity","pressure","WeatherForecast","a","axios","get","weatherData","data","main","App","localStorageKey","JSON","parse","localStorage","getItem","setValue","useEffect","setItem","stringify","useStateWithLocalStorage","setCities","Date","now","getForecast","newForecast","citiesList","filter","filtered","destination","document","querySelector","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.edda47f4.chunk.js","sourcesContent":["import React from \"react\";\n\nlet Header = () => {\n    return (\n        <header>\n            <h1>Add a city for getting the weather forecast</h1>\n        </header>\n    );\n}\n\nexport default Header;","import React, {useState} from \"react\";\nimport ReactDOM from \"react-dom\"\n\nlet CityForm = ({addCity}) => {\n    const [cityName, setCityName] = useState(\"\");\n\n    const handleChange = e => {\n        setCityName(e.target.value)\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if (cityName) {\n            addCity(cityName);\n        }\n        setCityName(\"\");\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <div className=\"mb-3\">\n                <div className=\"input-group mb-3\">\n                    <label className=\"form-label\">\n                        <input\n                            type=\"text\"\n                            name=\"city\"\n                            value={cityName}\n                            onChange={handleChange}\n                            className=\"form-control\"\n                            placeholder=\"City name\"\n                        />\n                    </label>\n                    <div className=\"input-group-append\">\n                        <button type=\"submit\" className=\"btn btn-primary\">\n                            Add\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </form>\n    );\n};\n\nexport default CityForm;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./CityListItem.css\";\n\nlet CityListItem = ({id, handleDelete, name}) => {\n    const handleClick = e => {\n        e.preventDefault()\n        handleDelete(e.currentTarget.id)\n    }\n\n    return (\n        <li className=\"list-group-item\">{name}\n            <button className=\"btn btn-danger btn-sm\" id={id} onClick={handleClick}>Delete</button>\n        </li>\n    );\n};\n\nexport default CityListItem;","import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport CityListItem from './CityListItem';\n\nlet CitiesList = ({cities, handleDelete}) => {\n    return (\n        <div className=\"input-group mb-3\">\n            <ul className=\"list-group list-group-flush\">\n                {cities.map(city => {\n                    return (\n                        <CityListItem key={city.key} id={city.id} handleDelete={handleDelete} name={city.name}/>\n                    )\n                })}\n            </ul>\n        </div>\n    );\n};\n\nexport default CitiesList;","import React, {useState} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./CitiesCards.css\";\n\nlet CitiesCards = ({cities, setForecast}) => {\n    return (\n        <>\n            <h1>Cities</h1>\n            <div className=\"row\">\n                {cities.map(city => {\n                    let temp = Math.round(city.forecast.temp);\n                    let feels_like = Math.round(city.forecast.feels_like);\n                    let temp_max = Math.round(city.forecast.temp_max);\n                    let temp_min = Math.round(city.forecast.temp_min);\n\n                    return (\n                        <div className=\"col-sm-6\">\n                            <div className=\"card\">\n                                <div className=\"card-body\" key={city.key} onClick={(e) => {\n                                    e.currentTarget.classList.toggle('active');\n                                }}>\n                                    <div className=\"city-info\">\n                                        <h2 className=\"card-title\">{city.name}</h2>\n                                        <p className=\"card-text\">current temp: {temp} 째C</p>\n                                    </div>\n                                    <div className=\"additional-info\">\n                                        <p className=\"card-text\">feels like: {feels_like} 째C</p>\n                                        <p className=\"card-text\">humidity: {city.forecast.humidity} %</p>\n                                        <p className=\"card-text\">pressure: {city.forecast.pressure} hPa</p>\n                                        <p className=\"card-text\">temp max: {temp_max} 째C</p>\n                                        <p className=\"card-text\">temp min: {temp_min} 째C</p>\n                                    </div>\n                                </div>\n                                <button className=\"btn btn-primary\" onClick={() => setForecast(city.name)}>Update\n                                    Weather\n                                </button>\n                            </div>\n                        </div>\n                    )\n\n                })}\n            </div>\n        </>\n    );\n}\n\nexport default CitiesCards;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\n\nlet WeatherForecast = async city => {\n    let weatherData = await axios.get(\n        `http://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&APPID=17dc0e3798f4ba2ad7fd5bb1cf11d460`\n    )\n    return weatherData.data.main;\n}\n\nexport default WeatherForecast;","import React, {useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport Header from \"./Header\";\nimport CityForm from \"./CityForm\";\nimport CitiesList from './CitiesList';\nimport useStateWithLocalStorage from './useStateWithLocalStorage';\nimport CitiesCards from \"./CitiesCards\";\nimport WeatherForecast from \"./WeatherForecast\";\n\nlet App = () => {\n    const [cities, setCities] = useStateWithLocalStorage('cities');\n\n    const addCity = async cityName => {\n        setCities([\n            ...cities,\n            {\n                key: Date.now(),\n                id: Date.now(),\n                name: cityName,\n                forecast: await getForecast(cityName)\n            }\n        ])\n    };\n\n    const setForecast = async cityName => {\n        let newForecast = await getForecast(cityName);\n\n        let citiesList = (cities.filter(city => {\n            if (city.name == cityName) {\n                return city.forecast = newForecast;\n            } else {\n                return cities;\n            }\n        }));\n        setCities(citiesList);\n    }\n\n    let getForecast = async city => await WeatherForecast(city);\n\n    let handleDelete = id => {\n        let filtered = cities.filter(city => {\n            return city.id != id;\n        });\n        setCities(filtered);\n    }\n\n    return (\n        <div className=\"app container\">\n            <div className=\"citiesListMain\">\n                <Header/>\n                <CityForm addCity={addCity}/>\n                <CitiesList\n                    cities={cities}\n                    handleDelete={handleDelete}\n                />\n                <CitiesCards cities={cities} setForecast={setForecast}/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import {useState, useEffect} from \"react\";\n\nexport default (localStorageKey) => {\n    const [value, setValue] = useState(\n        JSON.parse(localStorage.getItem(localStorageKey)) || []\n    );\n\n    useEffect(() => {\n        localStorage.setItem(localStorageKey, JSON.stringify(value));\n    }, [value]);\n\n    return [value, setValue];\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nconst destination = document.querySelector('#root');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n    destination\n);\n\n\n"],"sourceRoot":""}