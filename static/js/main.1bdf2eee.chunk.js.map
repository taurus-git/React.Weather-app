{"version":3,"sources":["components/Header.js","components/CityForm.js","components/CityListItem.js","components/CitiesList.js","components/City/WeatherIcon.js","components/City/MainInfo.js","components/City/LongTermForecast.js","components/City/AdditionalInfo.js","components/City/UpdateButton.js","components/City/City.js","components/CitiesCards.js","components/DailyForecast.js","components/FewDaysForecast.js","components/App.js","components/useStateWithLocalStorage.js","index.js"],"names":["Header","CityForm","addCity","useState","cityName","setCityName","onSubmit","e","preventDefault","className","type","name","value","onChange","target","placeholder","CityListItem","id","handleDelete","onClick","currentTarget","CitiesList","cities","map","city","key","WeatherIcon","iconurl","forecast","weather","icon","src","alt","MainInfo","temp","Math","round","main","LongTermForecast","forecastList","longTermForecast","data","list","splice","forecastDataObj","labels","datasets","label","backgroundColor","borderWidth","between","num","min","max","timepoint","date","dateObj","Date","parse","day","getDate","month","getMonth","hours","getHours","minutes","getMinutes","formatDate","dt_txt","getBackgroundColor","push","width","height","options","maintainAspectRatio","AdditionalInfo","feels_like","temp_max","temp_min","humidity","pressure","style","marginBottom","UpdateButton","setForecast","stopPropagation","nativeEvent","stopImmediatePropagation","City","setLongTermForecast","classList","toggle","CitiesCards","DailyForecast","a","axios","get","weatherData","FewDaysForecast","App","localStorageKey","JSON","localStorage","getItem","setValue","useEffect","setItem","stringify","useStateWithLocalStorage","setCities","now","getForecast","newForecast","citiesList","filter","getLongTermForecast","filtered","destination","document","querySelector","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1bdf2eee.chunk.js","sourcesContent":["import React from \"react\";\n\nlet Header = () => {\n    return (\n        <header>\n            <h1>Add a city for getting the weather forecast</h1>\n        </header>\n    );\n}\n\nexport default Header;","import React, {useState} from \"react\";\n\nlet CityForm = ({addCity}) => {\n    const [cityName, setCityName] = useState(\"\");\n\n    const handleChange = e => {\n        setCityName(e.target.value)\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if (cityName) {\n            addCity(cityName);\n        }\n        setCityName(\"\");\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <div className=\"mb-3\">\n                <div className=\"input-group mb-3\">\n                    <label className=\"form-label\">\n                        <input\n                            type=\"text\"\n                            name=\"city\"\n                            value={cityName}\n                            onChange={handleChange}\n                            className=\"form-control\"\n                            placeholder=\"City name\"\n                        />\n                    </label>\n                    <div className=\"input-group-append\">\n                        <button type=\"submit\" className=\"btn btn-primary\">\n                            Add\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </form>\n    );\n};\n\nexport default CityForm;","import React from 'react';\nimport \"./CityListItem.css\";\n\nlet CityListItem = ({id, handleDelete, name}) => {\n    const handleClick = e => {\n        e.preventDefault()\n        handleDelete(e.currentTarget.id)\n    }\n\n    return (\n        <li className=\"list-group-item\">{name}\n            <button\n                className=\"btn btn-danger btn-sm\"\n                id={id}\n                onClick={handleClick}>\n                Delete\n            </button>\n        </li>\n    );\n};\n\nexport default CityListItem;","import React from 'react';\nimport CityListItem from './CityListItem';\n\nlet CitiesList = ({cities, handleDelete}) => {\n    return (\n        <div className=\"input-group mb-3\">\n            <ul className=\"list-group list-group-flush\">\n                {cities.map(city => {\n                    return (\n                        <CityListItem\n                            key={city.key}\n                            id={city.id}\n                            handleDelete={handleDelete}\n                            name={city.name}\n                        />\n                    )\n                })}\n            </ul>\n        </div>\n    );\n};\n\nexport default CitiesList;","import React from \"react\";\n\nlet WeatherIcon = ({city}) => {\n    let iconcode = city.forecast.weather[0].icon;\n    let iconurl = \"http://openweathermap.org/img/wn/\" + iconcode + \"@2x.png\";\n\n    return(\n        <img className=\"card-img-top\" src={iconurl} alt=\"current weather icon\"></img>\n    )\n}\n\nexport default WeatherIcon;","import React from \"react\";\n\nlet MainInfo = ({city}) => {\n    let temp = Math.round(city.forecast.main.temp);\n\n    return (\n        <div className=\"city-info\">\n            <h2 className=\"card-title\">{city.name}</h2>\n            <p className=\"card-text\">current temp: {temp} °C</p>\n        </div>\n    )\n}\n\nexport default MainInfo;","import React from \"react\";\nimport { Bar } from 'react-chartjs-2';\n\nlet LongTermForecast = ({city}) => {\n    let forecastList = city.longTermForecast.data.list;\n    forecastList.splice(8, 8);\n\n    let forecastDataObj = {\n        labels: [],\n        datasets: [{\n            label: 'Long term forecast',\n            data: [],\n            backgroundColor: [],\n            borderWidth: 1\n        }]\n    };\n\n    let between = (num, min, max) => {\n        return num >= min && num <= max;\n    }\n\n    let getBackgroundColor = temp => {\n        if (between(temp, 25, 100)) {\n            return 'rgba(255, 99, 132, 0.2)';\n        } else if (between(temp, 10, 24)) {\n            return 'rgba(255, 206, 86, 0.2)';\n        } else if (between(temp, -5, 9)) {\n            return 'rgba(57,226,226,0.2)';\n        } else if (between(temp, -100, -4)) {\n            return 'rgba(27,113,239,0.2)';\n        } else {\n            return 'rgba(255, 159, 64, 0.2)';\n        }\n    }\n\n    let formatDate = date => {\n        let dateObj = new Date( Date.parse(date) );\n        let day = dateObj.getDate();\n        let month = dateObj.getMonth() + 1;\n        let hours = dateObj.getHours();\n        let minutes = dateObj.getMinutes();\n        let formattedDate = `${day}.${month} at ${hours}:${minutes}`;\n        return formattedDate;\n    }\n\n    let forecastData = forecastList.map(timepoint => {\n        let date = formatDate(timepoint.dt_txt)\n        let temp = Math.round(timepoint.main.temp);\n        let backgroundColor = getBackgroundColor(temp);\n        forecastDataObj.labels.push(date);\n        forecastDataObj.datasets[0].data.push(temp);\n        forecastDataObj.datasets[0].backgroundColor.push(backgroundColor);\n    })\n\n    return (\n        <>\n            <Bar\n                data={forecastDataObj}\n                width={100}\n                height={50}\n                options={{ maintainAspectRatio: false}}\n            />\n        </>\n    )\n}\n\nexport default LongTermForecast;","import React from \"react\";\nimport LongTermForecast from './LongTermForecast';\n\nlet AdditionalInfo = ({city}) => {\n    let feels_like = Math.round(city.forecast.main.feels_like);\n    let temp_max = Math.round(city.forecast.main.temp_max);\n    let temp_min = Math.round(city.forecast.main.temp_min);\n    return (\n        <div className=\"additional-info\">\n            <p className=\"card-text\">feels like: {feels_like} °C</p>\n            <p className=\"card-text\">humidity: {city.forecast.main.humidity} %</p>\n            <p className=\"card-text\">pressure: {city.forecast.main.pressure} hPa</p>\n            <p className=\"card-text\">temp max: {temp_max} °C</p>\n            <p className=\"card-text\">temp min: {temp_min} °C</p>\n            <div style={{height: 200, marginBottom: 20}}>\n                {\"longTermForecast\" in city &&\n                <LongTermForecast city={city}/>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default AdditionalInfo;\n","import React from \"react\";\n\nlet UpdateButton = ({city, setForecast}) => {\n    let stopPropagation = (e) => {\n        e.stopPropagation();\n        e.nativeEvent.stopImmediatePropagation();\n    };\n    return (\n        <button className=\"btn btn-primary\" onClick={(e) => {\n            stopPropagation(e);\n            setForecast(city.name);\n        }}>Update Weather\n        </button>\n    )\n}\n\nexport default UpdateButton;","import React from \"react\";\nimport WeatherIcon from \"./WeatherIcon\";\nimport MainInfo from \"./MainInfo\";\nimport AdditionalInfo from \"./AdditionalInfo\";\nimport UpdateButton from \"./UpdateButton\";\n\nlet City = ({cities, setForecast, setLongTermForecast}) => {\n    return (\n        cities.map(city => {\n            return (\n                <div className=\"col-sm-6\" key={city.key}>\n                    <div className=\"card text-center\" onClick={(e) => {\n                        e.currentTarget.classList.toggle('active');\n                        setLongTermForecast(city.name);\n                    }}>\n                        <WeatherIcon city={city}/>\n                        <div className=\"card-body\">\n                            <MainInfo city={city}/>\n                            <AdditionalInfo city={city}/>\n                        </div>\n                        <UpdateButton\n                            city={city}\n                            setForecast={setForecast}\n                        />\n                    </div>\n                </div>\n            )\n        })\n    )\n}\n\nexport default City","import React from \"react\";\nimport \"./CitiesCards.css\";\nimport City from \"./City/City\";\n\nlet CitiesCards = ({cities, setForecast, setLongTermForecast}) => {\n    return (\n        <>\n            <h1>Cities</h1>\n            <div className=\"row\">\n                <City\n                    cities={cities}\n                    setForecast={setForecast}\n                    setLongTermForecast={setLongTermForecast}\n                />\n            </div>\n        </>\n    );\n}\n\nexport default CitiesCards;\n","import React from \"react\";\nimport axios from \"axios\";\n\nlet DailyForecast = async city => {\n    let weatherData = await axios.get(\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&APPID=b0e3cfcac6b3bb698bc3351ad3e21975`\n    )\n    return weatherData.data;\n}\n\nexport default DailyForecast;","import React from \"react\";\nimport axios from \"axios\";\n\nlet FewDaysForecast = async city => {\n   let weatherData = await axios.get((\n           `http://api.openweathermap.org/data/2.5/forecast?q=${city}&cnt=16&units=metric&appid=b0e3cfcac6b3bb698bc3351ad3e21975`\n   ));\n\n    return weatherData;\n}\n\nexport default FewDaysForecast;","import React from 'react';\nimport Header from \"./Header\";\nimport CityForm from \"./CityForm\";\nimport CitiesList from './CitiesList';\nimport useStateWithLocalStorage from './useStateWithLocalStorage';\nimport CitiesCards from \"./CitiesCards\";\nimport DailyForecast from \"./DailyForecast\";\nimport FewDaysForecast from \"./FewDaysForecast\";\n\nlet App = () => {\n    const [cities, setCities] = useStateWithLocalStorage('cities');\n\n    const addCity = async cityName => {\n        setCities([\n            ...cities,\n            {\n                key: Date.now(),\n                id: Date.now(),\n                name: cityName,\n                forecast: await getForecast(cityName),\n                longTermForecast: await FewDaysForecast(cityName),\n            }\n        ])\n    };\n\n    const setForecast = async cityName => {\n        let newForecast = await getForecast(cityName);\n\n        let citiesList = (cities.filter(city => {\n            if (city.name == cityName) {\n                return city.forecast = newForecast;\n            } else {\n                return cities;\n            }\n        }));\n        setCities(citiesList);\n    }\n\n    let getForecast = async city => await DailyForecast(city);\n\n    const setLongTermForecast = async cityName => {\n        let weatherData = await getLongTermForecast(cityName);\n\n        let citiesList = (cities.filter(city => {\n            if (city.name == cityName) {\n                return city.longTermForecast = weatherData;\n            } else {\n                return cities;\n            }\n        }));\n        setCities(citiesList);\n    }\n\n    let getLongTermForecast = async city => await FewDaysForecast(city);\n\n    let handleDelete = id => {\n        let filtered = cities.filter(city => {\n            return city.id != id;\n        });\n        setCities(filtered);\n    }\n\n    return (\n        <div className=\"app container\">\n            <div className=\"citiesListMain\">\n                <Header/>\n                <CityForm addCity={addCity}/>\n                <CitiesList\n                    cities={cities}\n                    handleDelete={handleDelete}\n                />\n                <CitiesCards\n                    cities={cities}\n                    setForecast={setForecast}\n                    setLongTermForecast={setLongTermForecast}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import {useState, useEffect} from \"react\";\n\nexport default (localStorageKey) => {\n    const [value, setValue] = useState(\n        JSON.parse(localStorage.getItem(localStorageKey)) || []\n    );\n\n    useEffect(() => {\n        localStorage.setItem(localStorageKey, JSON.stringify(value));\n    }, [value]);\n\n    return [value, setValue];\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nconst destination = document.querySelector('#root');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n    destination\n);\n\n\n"],"sourceRoot":""}